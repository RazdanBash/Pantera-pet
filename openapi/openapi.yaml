openapi: 3.0.0
info:
  title: API
  version: 1.0.0

servers:
  - url: http://localhost:8084
    description: Local development server


paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskBody'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    patch:
      summary: Edit task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint


      requestBody:
        description: The task data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskBody'
      responses:
        '200':
          description: Task edited
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


    delete:
      summary: Delete task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /users:
      get:
        summary: Get all users
        tags:
          - users
        responses:
          '200':
            description: A list of users
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
      post:
        summary: Create a new user
        tags:
          - users
        requestBody:
          description: The user to create
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBody'
        responses:
          '201':
            description: The created task
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
  /users/{id}:
      patch:
          summary: Edit user
          tags:
            - users
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: uint
          requestBody:
            description: The userdata to update
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserBody'
          responses:
            '200':
              description: User edited
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/User'
            '404':
              description: User not found
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
      delete:
        summary: Delete user
        tags:
          - users
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: uint
        responses:
          '204':
            description: User deleted
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: uint
        username:
          type: string
        email:
          type: string
        password:
          type: string

    UserBody:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string

    Task:
      type: object
      properties:
        id:
          type: integer
          format: uint
        task:
          type: string
        is_done:
          type: boolean
    TaskBody:
      type: object
      properties:
        task:
          type: string
        is_done:
          type: boolean



